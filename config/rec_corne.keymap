#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <500>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        bracket: bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp LA(PIPE)>;
        };

        brace: brace {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACE";
            #binding-cells = <0>;
            bindings = <&kp RBRC>, <&kp PIPE>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        device1 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <4 44>;
            layers = <3>;
        };

        device2 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <3 44>;
            layers = <3>;
        };

        device3 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <2 44>;
            layers = <3>;
        };

        device4 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <17 44>;
            layers = <3>;
        };

        device5 {
            bindings = <&bt BT_SEL 4>;
            key-positions = <16 44>;
            layers = <3>;
        };

        lsysreset {
            bindings = <&sys_reset>;
            key-positions = <44 28>;
        };

        rsysreset {
            bindings = <&sys_reset>;
            key-positions = <45 41>;
        };

        lbootloader {
            bindings = <&bootloader>;
            key-positions = <44 13>;
        };

        rbootloader {
            bindings = <&bootloader>;
            key-positions = <27 45>;
        };

        sutudiounlock {
            bindings = <&studio_unlock>;
            key-positions = <44 0>;
        };

        outble {
            bindings = <&out OUT_BLE>;
            key-positions = <44 14>;
            layers = <3>;
        };

        outusb {
            bindings = <&out OUT_USB>;
            key-positions = <44 29>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T                                 &mmv MOVE_UP                     &kp Y        &kp U  &kp I            &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H        &kp J  &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &none                    &mmv MOVE_DOWN                   &kp N        &kp M  &kp COMMA        &kp DOT  &kp FSLH  &kp RSHIFT
                         &kp LALT  &mo 2  &lt 4 SPACE                                                            &lt 3 ENTER  &mo 1  &kp RIGHT_SHIFT
            >;
        };

        lower_numer {
            display-name = "NUMBER";
            bindings = <
&kp TAB  &none  &kp N9  &kp N8  &kp N7  &none                    &kp HASH            &kp HOME        &kp PG_DN       &kp PG_UP     &kp END          &parenthesis  &kp LBKT
&trans   &none  &kp N6  &kp N5  &kp N4  &none            &kp N0  &none     &kp DLLR  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &bracket      &kp SQT
&trans   &none  &kp N3  &kp N2  &kp N1  &kp N0  &none            &kp STAR            &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &brace        &kp MINUS
                        &none   &none   &none                                        &kp RSHIFT      &none           &kp LALT
            >;
        };

        raise_symbol {
            display-name = "SYMBOL";
            bindings = <
&kp LA(TAB)  &trans  &trans  &trans  &trans  &trans                    &kp HASH            &kp RA(UNDERSCORE)  &kp MINUS  &kp PLUS  &kp PRCNT  &kp EXCL       &kp LA(DELETE)
&trans       &trans  &trans  &trans  &trans  &trans            &kp N0  &trans    &kp DLLR  &kp N0              &kp STAR   &kp HASH  &kp DLLR   &kp RA(W)      &kp GRAVE
&trans       &trans  &trans  &trans  &trans  &trans  &trans            &kp STAR            &kp EQUAL           &kp AT     &kp EXCL  &kp RA(W)  &kp KP_DIVIDE  &kp AMPS
                             &trans  &none   &trans                                        &kp RET             &trans     &trans
            >;
        };

        fn_layer {
            display-name = "FN";
            bindings = <
&none &kp F10 &kp F7 &kp F8 &kp F9 &none                            &rgb_ug RGB_BRI                   &none  &none  &none  &none &none  &none
&none &kp F11 &kp F4 &kp F5 &kp F6 &none           &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none  &none  &none  &none &none  &none
&none &kp F12 &kp F1 &kp F2 &kp F3 &none  &none                     &rgb_ug RGB_BRD                   &none  &none  &none  &none &none  &none
                     &none  &none  &none                                                              &none  &none  &kp RALT
            >;
        };

        rec_layer {
            bindings = <
&trans  &trans  &trans      &trans        &trans        &trans                    &kp C_VOL_UP          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &trans
&trans  &trans  &mkp MCLK   &mkp RCLK     &mkp LCLK     &trans            &trans  &kp C_MUTE    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &kp PG_UP
&none   &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans  &trans            &kp C_VOL_DN          &kp LEFT_ARROW  &kp DOWN        &kp UP        &kp RIGHT        &trans  &kp PG_DN
                            &trans        &trans        &none                                           &trans          &trans          &trans
            >;

            label = "REC";
        };
    };
};
